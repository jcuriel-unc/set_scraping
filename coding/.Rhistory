geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.5) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.5) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
annotate("comment", x = 4, y = 25, label = stringr::str_wrap(my_label, 5))
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
geom_fit_text(grow = TRUE)+
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp
ggplot_persp +  geom_text(check_overlap = TRUE)
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
geom_fit_text(grow = TRUE)+
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp +  geom_text(check_overlap = TRUE)
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp
ggplot_persp +  geom_text(check_overlap = TRUE)
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
ggplot_persp + geom_label()
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
geom_text(data=text_sample, aes(label=comment,x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic)),size=0.9) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
### export this
ggplot_persp
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
### export this
ggplot_persp
ggplot_persp <- ggplot(rmp_df_persp_sub, aes(x=aggregate_outrage,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of normalized aggregation of peRspective scoring",
x="Normalized peRspective aggregate scores", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic"))
ggplot_persp_corr <- ggplot(rmp_df_persp_sub, aes(x=manual_agg,y=aggregate_outrage,
group=as.factor(coded_toxic),
col=as.factor(coded_toxic))) +
geom_point() +
theme_minimal() + ## cleans up the presentation of the plot
labs(title="Comparison of correlation of manual coding \n on peRspective scores, normalized",
x="Aggregated manual coding of comments", y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_color_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
### export this
ggplot_persp_corr
## save ggplot
ggsave("coding_perspective_corr_plot_06242023.png" ,ggplot_persp_corr,
scale=1,width=9,height=6,units = c("in"), dpi=400,bg="white")
names(rmp_df_persp_sub)
models2run
i=1
rmp_df_persp_sub$temp_var <- rmp_df_persp_sub[models2run[i]]
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic"))
ggplot_persp_temp
summary(rmp_df_persp_sub$temp_var)
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4)
ggplot_persp_temp
str(rmp_df_persp_sub$temp_var)
str(rmp_df_persp_sub)
ggplot_persp_temp
rmp_df_persp_sub$temp_var <- rmp_df_persp_sub[models2run[i]]
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1))
ggplot_persp_temp
rmp_df_persp_sub$temp_var <- unlist(rmp_df_persp_sub$temp_var)
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1))
ggplot_persp_temp
rmp_df_persp_sub$temp_var <- rmp_df_persp_sub[models2run[i]]
rmp_df_persp_sub$temp_var <- unlist(rmp_df_persp_sub$temp_var)
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1))
ggplot_persp_temp
## report medians
toxic_median <- rmp_df_persp_sub %>%
group_by(coded_toxic) %>%
quantile(temp_var, 0.5)
toxic_median
rmp_df_persp_sub$temp_var <- rmp_df_persp_sub[models2run[i]]
rmp_df_persp_sub$temp_var <- unlist(rmp_df_persp_sub$temp_var)
summary(rmp_df_persp_sub$temp_var)
## report medians
toxic_median <- rmp_df_persp_sub %>%
group_by(coded_toxic) %>%
summarize(quantile(temp_var, 0.5))
toxic_median
toxic_median[1]
toxic_median[2]
toxic_median[1,2]
toxic_med1 = toxic_median[2,2]
toxic_med1
library(grid)
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
grobTree(textGrob("Median values", x=0.8,  y=0.95, hjust=0))
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
grobTree(textGrob("Median values", x=0.8,  y=0.95, hjust=0,
gp=gpar(col="red", fontsize=13, fontface="italic")))
### create labels
header_label <- grobTree(textGrob("Median values", x=0.8,  y=0.95, hjust=0,
gp=gpar(col="red", fontsize=13, fontface="italic")))
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
annotation_custom(header_label)
ggplot_persp_temp
### create labels
header_label <- grobTree(textGrob("Median values", x=0.7,  y=0.95, hjust=0,
gp=gpar(col="red", fontsize=13, fontface="italic")))
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
annotation_custom(header_label)
ggplot_persp_temp
### create labels
header_label <- grobTree(textGrob("Median values", x=0.7,  y=0.95, hjust=0,
gp=gpar(col="red", fontsize=10, fontface="italic")))
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
annotation_custom(header_label)
ggplot_persp_temp
### create labels
header_label <- grobTree(textGrob("Median values", x=0.7,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=10, fontface="italic")))
notox_label <- grobTree(textGrob(paste0("Non-toxic: ",toxic_med0), x=0.7,  y=0.85, hjust=0,
gp=gpar(col="#F8766D", fontsize=8, fontface="italic")))
### get median and place in text
toxic_med0 = toxic_median[1,2]
toxic_med1 = toxic_median[2,2]
### create labels
header_label <- grobTree(textGrob("Median values", x=0.7,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=10, fontface="italic")))
notox_label <- grobTree(textGrob(paste0("Non-toxic: ",toxic_med0), x=0.7,  y=0.85, hjust=0,
gp=gpar(col="#F8766D", fontsize=8, fontface="italic")))
tox_label <- grobTree(textGrob(paste0("Non-toxic: ",toxic_med1), x=0.7,  y=0.75, hjust=0,
gp=gpar(col="#00BFC4", fontsize=8, fontface="italic")))
### now plot
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
annotation_custom(header_label) + annotation_custom(notox_label) +
annotation_custom(tox_label)
ggplot_persp_temp
toxic_med0
as.numeric(#F8766D)
as.numeric(toxic_med0)
### get median and place in text
toxic_med0 = round(as.numeric(toxic_median[1,2]),2)
toxic_med1 =  round(as.numeric(toxic_median[2,2]),2)
### create labels
header_label <- grobTree(textGrob("Median values", x=0.7,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=10, fontface="italic")))
notox_label <- grobTree(textGrob(paste0("Non-toxic: ",toxic_med0), x=0.7,  y=0.85, hjust=0,
gp=gpar(col="#F8766D", fontsize=8, fontface="italic")))
tox_label <- grobTree(textGrob(paste0("Non-toxic: ",toxic_med1), x=0.7,  y=0.75, hjust=0,
gp=gpar(col="#00BFC4", fontsize=8, fontface="italic")))
### now plot
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
annotation_custom(header_label) + annotation_custom(notox_label) +
annotation_custom(tox_label)
ggplot_persp_temp
## now save
sv_name = paste0("plots/comparison",sep="/",models2run[i],sep=".png")
sv_name
## now save
sv_name = paste0("plots/comparison",sep="_",models2run[i],sep=".png")
sv_name
### create labels
header_label <- grobTree(textGrob("Median values", x=0.7,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=10, fontface="italic")))
notox_label <- grobTree(textGrob(paste0("Non-toxic: ",toxic_med0), x=0.7,  y=0.85, hjust=0,
gp=gpar(col="#F8766D", fontsize=8)))
tox_label <- grobTree(textGrob(paste0("Non-toxic: ",toxic_med1), x=0.7,  y=0.75, hjust=0,
gp=gpar(col="#00BFC4", fontsize=8)))
### now plot
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
annotation_custom(header_label) + annotation_custom(notox_label) +
annotation_custom(tox_label)
## plot out
ggplot_persp_temp
### create labels
header_label <- grobTree(textGrob("Median values", x=0.7,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=10, fontface="italic")))
notox_label <- grobTree(textGrob(paste0("Manual non-toxic: ",toxic_med0), x=0.7,  y=0.85, hjust=0,
gp=gpar(col="#F8766D", fontsize=8)))
tox_label <- grobTree(textGrob(paste0("Manual toxic: ",toxic_med1), x=0.7,  y=0.75, hjust=0,
gp=gpar(col="#00BFC4", fontsize=8)))
### now plot
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
annotation_custom(header_label) + annotation_custom(notox_label) +
annotation_custom(tox_label)
## plot out
ggplot_persp_temp
for (i in 1:length(models2run)) {
rmp_df_persp_sub$temp_var <- rmp_df_persp_sub[models2run[i]]
rmp_df_persp_sub$temp_var <- unlist(rmp_df_persp_sub$temp_var)
## report medians
toxic_median <- rmp_df_persp_sub %>%
group_by(coded_toxic) %>%
summarize(quantile(temp_var, 0.5))
### get median and place in text
toxic_med0 = round(as.numeric(toxic_median[1,2]),2)
toxic_med1 =  round(as.numeric(toxic_median[2,2]),2)
### create labels
header_label <- grobTree(textGrob("Median values", x=0.7,  y=0.95, hjust=0,
gp=gpar(col="black", fontsize=10, fontface="italic")))
notox_label <- grobTree(textGrob(paste0("Manual non-toxic: ",toxic_med0), x=0.7,  y=0.85, hjust=0,
gp=gpar(col="#F8766D", fontsize=8)))
tox_label <- grobTree(textGrob(paste0("Manual toxic: ",toxic_med1), x=0.7,  y=0.75, hjust=0,
gp=gpar(col="#00BFC4", fontsize=8)))
### now plot
ggplot_persp_temp <- ggplot(rmp_df_persp_sub, aes(x=temp_var,fill=as.factor(coded_toxic))) +
geom_density(alpha=0.4) + #### very important command; makes the CIs
theme_minimal() + ## cleans up the presentation of the plot
labs(title=paste0("Comparison of normalized aggregation of peRspective \n ", models2run[i], sep=" ",
"dimension") ,
x=paste0("Probability on peRspective ", models2run[i], sep=" ", "dimension"), y="Density",
caption=paste0("This plot was generated on ", Sys.Date(),sep="\n",
"By the Ohio Northern University SET-SURF Center."))+
scale_fill_discrete(name = "Manual coding", labels = c("Not toxic", "Toxic")) +
scale_x_continuous(limits = c(0, 1)) +
annotation_custom(header_label) + annotation_custom(notox_label) +
annotation_custom(tox_label)
## plot out
ggplot_persp_temp
## now save
sv_name = paste0("plots/comparison",sep="_",models2run[i],sep=".png")
ggsave(sv_name ,ggplot_persp_temp,
scale=1,width=9,height=6,units = c("in"), dpi=400,bg="white")
}
